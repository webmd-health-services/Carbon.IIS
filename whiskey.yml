
Build:
- Version:
    Path: Carbon.IIS\Carbon.IIS.psd1
    Prerelease:
    - "*/*": alpha1
    - develop: rc1

# Update the AppVeyor build/version number.
- Exec:
      OnlyBy: BuildServer
      Path: appveyor
      Argument: [ UpdateBuild, -Version, "$(WHISKEY_SEMVER2)+$(WHISKEY_BUILD_NUMBER)" ]

# Dot-sourcing files is expensive. Move all functions into .psm1 file to improve import speed. Do this before testing
# to ensure the module still works.
- MergeFile:
    OnlyBy: BuildServer
    # Builds run twice on some serves. Only run this step if the module hasn't been merged yet.
    IfExists: Carbon.IIS\Functions\*.ps1
    Path:
    - Carbon.IIS\Functions\*.ps1
    DestinationPath: Carbon.IIS\Carbon.IIS.psm1
    DeleteSourceFiles: true
    TextSeparator: "$(NewLine)$(NewLine)"

- PowerShell:
    ExceptDuring: Clean
    ScriptBlock: |
       if( -not (Get-Module -ListAvailable -Name 'Prism') )
        {
            Find-Module -Name 'Prism' | Select-Object -First 1 | Install-Module -Force -Scope CurrentUser
        }
        prism install | Format-Table -Auto

- PowerShell:
    OnlyDuring: Clean
    Path: reset.ps1

# Build runs twice on some servers, so delete any ZIP file created by another build.
- Delete:
    Path: .output\*.zip

- CopyFile:
    Path:
    - CHANGELOG.md
    - README.md
    - LICENSE
    - NOTICE
    DestinationDirectory: Carbon.IIS

- Zip:
    ArchivePath: .output\Carbon.IIS-$(WHISKEY_SEMVER2).zip
    Path: 
    - Carbon.IIS
    Exclude:
    - "*.pdb"
    - "*.orig"

- Exec:
    OnlyBy: BuildServer
    Path: appveyor
    Argument: [ 'PushArtifact', '.output/Carbon.IIS-$(WHISKEY_SEMVER2).zip', '-DeploymentName', 'GitHub' ]


- PublishPowerShellModule:
    Path: Carbon.IIS

- Exec:
    OnlyBy: BuildServer
    Path: appveyor
    Argument: [
        'PushArtifact',
        '.output/Carbon.IIS.$(WHISKEY_SEMVER2_NO_BUILD_METADATA).nupkg',
        '-DeploymentName',
        'PowerShellGallery'
    ]

- PowerShell:
    ScriptBlock: |
        .\Tools\Blade\blade.ps1 -Path ".\Tests\IIS" -XmlLogPath ".\.output\blade.xml"

        if( (Test-Path -Path 'env:APPVEYOR_JOB_ID') )
        {
            Write-Host "Uploading test results" -NoNewLine
            $uploadUrl = "https://ci.appveyor.com/api/testresults/nunit/$$($env:APPVEYOR_JOB_ID)"
            Write-Host " to $$($uploadUrl)."
            [Net.WebClient]::New().UploadFile($uploadUrl, (Resolve-Path '.\.output\blade.xml'))
        }

        if( $LastBladeResult.Errors -or $LastBladeResult.Failures )
        {
            $numErrors = $LastBladeResult.Errors
            $numFailures = $LastBladeResult.Failures
            $msg = "Blade tests failed with $$($numErrors) error(s) and $$($numFailures) failure(s)."
            throw $msg
        }

- Pester4:
    Script:
    - Tests\Carbon.IIS.Tests.ps1
    - Tests\Import-Carbon.IIS.Tests.ps1
    - Tests\Install-CIisAppPool.Tests.ps1
    - Tests\Install-CIisWebsite.Tests.ps1
    - Tests\Set-CIisWebsiteID.Tests.ps1
